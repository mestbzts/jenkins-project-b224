pipeline {
    agent any   
    environment {
        AWS_ACCESS=credentials('aws-credentials')  
        AWS_REGION = 'us-east-1'
        REPOSITORY_Nodejs = 'nodejs'
        REPOSITORY_React = 'react'
        REPOSITORY_Postgresql = 'postgresql'
        
    }
    stages {
        stage('Create Infrastructure') {
            steps {
                dir('terraform-docs/infra') { 
                    script {
                        sh(script: 'terraform init', returnStdout: true)
                        sh(script: 'terraform plan', returnStdout: true)
                        sh(script: 'terraform apply -auto-approve', returnStdout: true)
                    }
                }
            }
        }
        stage('Create ECR') {
            steps {
                    script {
                        def repoExists-nodejs = sh (
                            script: "aws ecr describe-repositories --repository-names ${REPOSITORY_Nodejs}",
                            returnStatus: true
                        )
                        // Create the repository if it does not exist
                        if (repoExists-nodejs != 0) {
                            sh "aws ecr create-repository --repository-name ${REPOSITORY_Nodejs}"
                        }
                    }
                    script {
                        def repoExists-react = sh (
                            script: "aws ecr describe-repositories --repository-names ${REPOSITORY_React}",
                            returnStatus: true
                        )
                        // Create the repository if it does not exist
                        if (repoExists-react != 0) {
                            sh "aws ecr create-repository --repository-name ${REPOSITORY_React}"
                        }
                    }
                    script {
                        def repoExists-postgresql = sh (
                            script: "aws ecr describe-repositories --repository-names ${REPOSITORY_Postgresql}",
                            returnStatus: true
                        )
                        // Create the repository if it does not exist
                        if (repoExists-postgresql != 0) {
                            sh "aws ecr create-repository --repository-name ${REPOSITORY_Postgresql}"
                        }
                    }
                }    
            }  
        }
        stage('Build Images') {
            steps {
                script {
                    sh 'echo "Images Build"'
                }
            }
        }
        stage('Push Images to ECR') {
            steps {
                script {
                    sh 'echo "Images Pushed"'
                }
            }
        }
        stage('Wait') {
            steps {
                script {
                    sh 'echo "Wait is done."'
                }
            }
        }
    }

